Index: devfs04.doc
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/libtests/devfs04/devfs04.doc,v
retrieving revision 1.1
diff -u -r1.1 devfs04.doc
--- devfs04.doc	22 Jul 2010 11:54:10 -0000	1.1
+++ devfs04.doc	27 Jul 2010 08:24:17 -0000
@@ -17,6 +17,7 @@
 
 + devFS_read
 + devFS_write
++ null_initialize
 
 concepts:
 
@@ -24,3 +25,5 @@
 paths in the read / write routines for devFS. These are invoked using
 the system calls read() and write().
 
++ The write call is forwarded to null_write, thus exercising
+null_write too.
Index: init.c
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/libtests/devfs04/init.c,v
retrieving revision 1.1
diff -u -r1.1 init.c
--- init.c	22 Jul 2010 11:54:10 -0000	1.1
+++ init.c	27 Jul 2010 08:24:18 -0000
@@ -18,6 +18,7 @@
 #include <sys/stat.h>
 #include <fcntl.h>
 #include "test_driver.h"
+#include <rtems/devnull.h>
 
 rtems_task Init(
   rtems_task_argument argument
@@ -60,9 +61,15 @@
   rtems_test_assert( status == -1 );
   rtems_test_assert( errno == ENOSYS );
 
+  status = mknod( "/dev/null", 0777 | S_IFCHR, 0LL );
+  rtems_test_assert( status == 0 );
+
   puts( "*** END OF TEST DEVFS04 ***" );
 
-  rtems_test_exit(0);
+  status = null_initialize( 0, 0, NULL );
+
+  /* A fatal error would be raised in previous call*/
+
 }
 
 /* configuration information */
Index: test_driver.c
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/libtests/devfs04/test_driver.c,v
retrieving revision 1.1
diff -u -r1.1 test_driver.c
--- test_driver.c	22 Jul 2010 11:54:10 -0000	1.1
+++ test_driver.c	27 Jul 2010 08:24:18 -0000
@@ -17,7 +17,7 @@
 #include <rtems.h>
 #include "test_driver.h"
 #include <rtems/libio.h>
-
+#include <rtems/devnull.h>
 /* 
  * The test driver routines are mostly derived from the null driver routines.
  */
@@ -158,7 +158,7 @@
 
   if ( rw_args ) {
     if( rw_args->count == 5 )
-      rw_args->bytes_moved = rw_args->count;
+      return null_write( 0, 0, pargp );
     else {
       rw_args->bytes_moved = 0;
       return RTEMS_NOT_IMPLEMENTED;
