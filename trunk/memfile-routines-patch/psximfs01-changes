Index: init.c
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/psxtests/psximfs01/init.c,v
retrieving revision 1.3
diff -u -r1.3 init.c
--- init.c	30 Jun 2010 14:41:56 -0000	1.3
+++ init.c	29 Jul 2010 16:19:41 -0000
@@ -138,6 +138,57 @@
   } while (new > 0);
 }
 
+void extend_helper(void)
+{
+  off_t position;
+  off_t new;
+  off_t sc;
+  int   rc;
+
+  position = lseek( TestFd, 0, SEEK_END );
+  printf( "Seek to end .. returned %d\n", (int) position );
+  rtems_test_assert( position == 1 );
+
+  /* 
+   * test case to ftruncate a file to a length > its size 
+   */
+
+  rc = ftruncate( TestFd, 2 );
+  rtems_test_assert( rc == 0 );
+
+  puts( "lseek/ftruncate loop.." );
+  new = position;
+  do {
+    sc = lseek( TestFd, new, SEEK_SET );
+    if( sc == -1 ) {
+      if( errno == ENOSPC ) {
+	break;
+      }
+      else {
+	rtems_test_assert( 0 );
+      }
+    }
+
+    rc = ftruncate( TestFd, new );
+    if ( rc != 0 ) {
+      if( errno != ENOSPC ) {
+	fprintf(
+	  stderr,
+	  "ERROR - at offset %d - returned %d and error=%s\n",
+	  (int) new,
+	  rc,
+	  strerror( errno )
+        );
+      }
+      else {
+	break;
+      }
+    }
+    rtems_test_assert( rc == 0 );
+    ++new;
+  } while ( 1 );
+}
+
 void close_it(void)
 {
   int rc;
@@ -147,11 +198,24 @@
   rtems_test_assert( rc == 0 );
 }
 
+void unlink_it(void)
+{
+  int rc;
+
+  puts( "unlink(" FILE_NAME ") - OK" );
+  rc = unlink( FILE_NAME );
+  rtems_test_assert( rc == 0 );
+}
+
 rtems_task Init(
   rtems_task_argument argument
 )
 {
   int i;
+  extern Heap_Control  *RTEMS_Malloc_Heap;
+  void *alloc_ptr = (void *)0;
+  Heap_Information_block Info;
+
   puts( "\n\n*** TEST IMFS 01 ***" );
 
   for (i=0 ; i<sizeof(Buffer) ; i++ )
@@ -169,8 +233,22 @@
   
   open_it(false, false);
   truncate_helper();
+
+  /*
+   * Allocate the heap, so that extend cannot be successful
+   */
+  _Heap_Get_information( RTEMS_Malloc_Heap, &Info );
+  alloc_ptr = malloc( Info.Free.largest-4 );
+
+  extend_helper();
+
+  /* 
+   * free the allocated heap memory
+   */
+  free(alloc_ptr);
+
   close_it();
-  
+  unlink_it();
 
   puts( "*** END OF TEST IMFS 01 ***" );
 
Index: psximfs01.doc
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/psxtests/psximfs01/psximfs01.doc,v
retrieving revision 1.1
diff -u -r1.1 psximfs01.doc
--- psximfs01.doc	28 Jun 2010 18:48:25 -0000	1.1
+++ psximfs01.doc	29 Jul 2010 16:19:41 -0000
@@ -1,5 +1,5 @@
 #
-#  $Id$
+#  $Id: psxfile01.doc,v 1.0 2010/07/29 21:44:14 bharath Exp $
 #
 #  COPYRIGHT (c) 1989-2010.
 #  On-Line Applications Research Corporation (OAR).
@@ -21,6 +21,7 @@
   + write
   + lseek
   + ftruncate
+  + unlink
 
 concepts:
 
@@ -33,3 +34,5 @@
 
 + This should exercise much of the singly, doubly and triply indirect
 block management code in the IMFS.
+
++ Exercise unlink, and hence IMFS_memfile_remove
Index: psximfs01.scn
===================================================================
RCS file: /usr1/CVS/rtems/testsuites/psxtests/psximfs01/psximfs01.scn,v
retrieving revision 1.1
diff -u -r1.1 psximfs01.scn
--- psximfs01.scn	28 Jun 2010 18:48:25 -0000	1.1
+++ psximfs01.scn	29 Jul 2010 16:19:41 -0000
@@ -12,5 +12,8 @@
 open(biggie) - OK 
 Seek to end .. returned 1280
 lseek/ftruncate loop..
+Seek to end .. returned 1
+lseek/ftruncate loop..
 close(biggie) - OK 
+unlink(biggie) - OK
 *** END OF TEST IMFS 01 ***
